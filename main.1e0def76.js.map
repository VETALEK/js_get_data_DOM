{"version":3,"sources":["scripts/main.js"],"names":["triplify","str","triplifyed","digitsProcessed","i","length","push","reverse","join","totalEl","document","querySelector","averageEl","populations","querySelectorAll","total","reduce","sum","population","parseInt","innerText","split","average","toString"],"mappings":";AAAA,aAkCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhCA,SAASA,EAASC,GAIX,IAHCC,IAAAA,EAAa,GACfC,EAAkB,EAEbC,EAAIH,EAAII,OAAS,EAAGD,GAAK,EAAGA,IACnCF,EAAWI,KAAKL,EAAIG,MACpBD,EAEsB,GAAM,GACjB,IAANC,GACHF,EAAWI,KAAK,KAMbJ,OAFPA,EAAWK,UAEJL,EAAWM,KAAK,IAGzB,IAAMC,EAAUC,SAASC,cAAc,qBACjCC,EAAYF,SAASC,cAAc,uBACnCE,EAAcH,SAASI,iBAAiB,eAExCC,EAAQ,EAAIF,GAAaG,OAAO,SAACC,EAAKC,GAGnCD,OAAAA,EAFQE,SAASD,EAAWE,UAAUC,MAAM,KAAKb,KAAK,MAG5D,GAEGc,EAAUP,EAAQF,EAAYR,OAEpCI,EAAQW,UAAYpB,EAASe,EAAMQ,YACnCX,EAAUQ,UAAYpB,EAASsB,EAAQC","file":"main.1e0def76.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction triplify(str) {\n  const triplifyed = [];\n  let digitsProcessed = 0;\n\n  for (let i = str.length - 1; i >= 0; i--) {\n    triplifyed.push(str[i]);\n    digitsProcessed++;\n\n    if (digitsProcessed % 3 === 0\n      && i !== 0) {\n      triplifyed.push(',');\n    }\n  }\n\n  triplifyed.reverse();\n\n  return triplifyed.join('');\n}\n\nconst totalEl = document.querySelector('.total-population');\nconst averageEl = document.querySelector('.average-population');\nconst populations = document.querySelectorAll('.population');\n\nconst total = [...populations].reduce((sum, population) => {\n  const parsed = parseInt(population.innerText.split(',').join(''));\n\n  return sum + parsed;\n}, 0);\n\nconst average = total / populations.length;\n\ntotalEl.innerText = triplify(total.toString());\naverageEl.innerText = triplify(average.toString());\n"]}